name: Auto-Run ML Model on Push

on:
  push:
      branches-ignore:  # ignore main branch
      - main

jobs:
  run_ml_model:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout Repository
        uses: actions/checkout@v4



      - name: Set up Python    
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"



      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r modeling/requirements.txt
          pip install dvc  # Ensure DVC is installed
          pip install mlflow jq



      - name: Extract MLflow Credentials from `env_1`
        run: |
          echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}" >> $GITHUB_ENV


      - name: Extract EXP_ID from commit message
        id: extract_exp_id
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          CLEAN_MSG=$(echo "$COMMIT_MSG" | tr '\n' ' ')
          echo "üìù Commit message: $CLEAN_MSG"

          EXP_ID=$(echo "$CLEAN_MSG" | grep -oP '(?<=EXP_ID=)[\w\-]+' || true)

          if [ -z "$EXP_ID" ]; then
            echo "‚ùå EXP_ID not found in commit message"
            exit 1
          fi

          echo "‚úÖ Found EXP_ID=$EXP_ID"
          echo "EXP_ID=$EXP_ID" >> $GITHUB_ENV


      - name: Fetch and compare all metrics
        env:
          MLFLOW_TRACKING_USERNAME: ${{ env.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ env.MLFLOW_TRACKING_PASSWORD }}
        run: |
          echo "üì• Running get_metrics.py with EXP_ID=${{ env.EXP_ID }}"
          cd modeling/commons
          python get_metrics.py --exp_id=${{ env.EXP_ID }}



      - name: Upload result CSV to artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: model_comparison_result
          path: modeling/commons/model_comparison_result.csv



      - name: Slack notify via webhook
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK__CICD_DATA_NOTI_DEV }}
          SLACK_COLOR: "#FF0000"
          SLACK_TITLE: "Model Comparison Result"
          SLACK_MESSAGE: |
            Some models degraded in the latest run.

            üìÑ *Artifact:* `model_comparison_result.csv`
            üîó [Click here to download](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})