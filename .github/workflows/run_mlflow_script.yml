name: Auto-Run ML Model on Push

on:
  push:

jobs:
  run_ml_model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"



      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r modeling/requirements.txt
          pip install dvc  # Ensure DVC is installed
          pip install mlflow jq


      # - name: Extract MLflow Credentials from `env_1`
      #   run: |
      #     echo '${{ secrets.MLFLOW_TRACKING_URI }}'
      #     echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_USERNAME }}"
      #     echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_PASSWORD }}"

      - name: Extract exp_id from Commit Message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          EXP_ID=$(echo "$COMMIT_MSG" | grep -oP '(?<=exp_id=)[a-zA-Z0-9]+')
          if [ -z "$EXP_ID" ]; then
            echo "🚨 No exp_id found! Exiting."
            exit 1
          fi
          echo "EXP_ID=$EXP_ID" >> $GITHUB_ENV
          echo "🔍 Extracted Experiment ID: $EXP_ID"


      - name: Change Directory and Run Script
        env:
          EXP_ID: ${{ env.EXP_ID }}
        run: |
          cd modeling/commons
          python get_metrics.py



      - name: Read Metric and Use in GitHub Actions
        run: |
          METRIC_VALUE=$(cat metric_value.txt)
          echo "🚀 MLflow Metric Value: $METRIC_VALUE"
          echo "METRIC_VALUE=$METRIC_VALUE" >> $GITHUB_ENV



      - name: Use Metric in Another Step
        run: |
          echo "The metric retrieved from MLflow is: $METRIC_VALUE"


      - name: Run MLflow Training Script
        run: python modeling/linear_regression.py
