name: Auto-Run ML Model on Push

on:
  push:

jobs:
  run_ml_model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r modeling/requirements.txt
          pip install dvc  # Ensure DVC is installed
          pip install mlflow jq
          

      - name: Extract MLflow Credentials from `env_1`
        run: |
          echo '${{ secrets.env_1 }}' > mlflow_secrets.json
          echo "MLFLOW_TRACKING_URI=$(jq -r '.MLFLOW_TRACKING_URI' mlflow_secrets.json)" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=$(jq -r '.MLFLOW_TRACKING_USERNAME' mlflow_secrets.json)" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=$(jq -r '.MLFLOW_TRACKING_PASSWORD' mlflow_secrets.json)" >> $GITHUB_ENV

      - name: Fetch Metrics from MLflow
        env:
          MLFLOW_TRACKING_URI: ${{ env.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ env.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ env.MLFLOW_TRACKING_PASSWORD }}
        run: python get_metrics.py

      - name: Fetch Metrics from MLflow
        env:
          EXPERIMENT_ID: $VERSION
        run: python ./modeling/commons/get_metrics.py




      - name: Read Metric and Use in GitHub Actions
        run: |
          METRIC_VALUE=$(cat metric_value.txt)
          echo "ðŸš€ MLflow Metric Value: $METRIC_VALUE"
          echo "METRIC_VALUE=$METRIC_VALUE" >> $GITHUB_ENV



      - name: Use Metric in Another Step
        run: |
          echo "The metric retrieved from MLflow is: $METRIC_VALUE"


      - name: Run MLflow Training Script
        run: python modeling/linear_regression.py
